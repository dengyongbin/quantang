package com.quantang.web.index.reservation;

import java.io.PrintWriter;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.xml.namespace.QName;

import org.apache.axis2.AxisFault;
import org.apache.axis2.addressing.EndpointReference;
import org.apache.axis2.client.Options;
import org.apache.axis2.rpc.client.RPCServiceClient;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import com.quantang.common.ConfigFactory;
import com.quantang.dao.FirmAccountDao;
import com.quantang.service.AccountService;
import com.quantang.service.NoticeService;

@Controller
public class ReservationController {

	String protocolidtmp = "";

	@Autowired
	private FirmAccountDao firmaccountDao;

	@Autowired
	private AccountService accountService;

	@Autowired
	private NoticeService noticeService;

	@RequestMapping("/reservation.htm")
	public String reservation(ModelMap mm) {
		List<Map<String, Object>> noticelt = noticeService.getNoticeLast();
		mm.addAttribute("noticelt", noticelt);
		mm.addAttribute("reservation", "active");
		return "index/reservation";
	}

	@RequestMapping("/savereser.htm")
	public String saveReservation(String name, String phone, String email, String sex, String age, ModelMap mm) {
		accountService.addAccount(name, phone, email, sex, age);
		mm.addAttribute("message", "提交成功!");
		mm.addAttribute("question", "reservation");
		return "index/reservation";
	}

	@RequestMapping(value = "/rightSubmit.htm", method = RequestMethod.POST)
	public void rightSubmit(PrintWriter printWriter, String name, String phone, String email, String sex, String age) {
		accountService.addAccount(name, phone, email, sex, age);
		printWriter.flush();
		printWriter.close();
	}

	@RequestMapping("/step2.htm")
	public String step2(String v) {
		if ("".equals(v) || v == null || "".equals(v)) {
			return "redirect:/reservation.htm";
		}
		return "index/step2";
	}

	@RequestMapping("/step3Submit.htm")
	public String step3Submit(String v, HttpServletRequest request) {
		if ("".equals(v) || v == null || "".equals(v)) {
			return "redirect:/reservation.htm";
		}
		String protocolid = firmaccountDao.SaveProtocol(new String[] { request.getParameter("name"),
				request.getParameter("address"), request.getParameter("phone"), request.getParameter("fax") });
		protocolidtmp = protocolid;
		return "redirect:/step3.htm?v=1&protocolid=" + protocolid;
	}

	@RequestMapping("/step3.htm")
	public String step3(String v, String protocolid, ModelMap mm) {
		mm.addAttribute("protocolid", protocolid);
		return "index/step3";
	}

	@RequestMapping("/step4.htm")
	public String step4(String v, String protocolid, ModelMap mm) {
		if ("".equals(v) || v == null || "".equals(v)) {
			return "redirect:/reservation.htm";
		}
		mm.addAttribute("protocolid", protocolid);
		return "index/step4";
	}

	@RequestMapping("/step5.htm")
	public String step5(String v, String protocolid, HttpServletRequest request, ModelMap mm) {
		if ("".equals(v) || v == null || "".equals(v)) {
			return "redirect:/reservation.htm";
		}
		// 接口调节
		RPCServiceClient client = null;
		try {
			client = new RPCServiceClient();
		} catch (AxisFault e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		Options options = client.getOptions();
		// 指定调用WebService的URL
		EndpointReference targetEPR = new EndpointReference(
				"http://www.cms-tjpme.com/services/openAccountForUnitService?wsdl");
		options.setTo(targetEPR);
		// 指定openAndCheck方法的参数值
		Object[] entrysArgs = new Object[] { "1234f08037u87b134718c9d15a545wed", "203", "203888888000002", request.getParameter("name"),
				request.getParameter("idType"), request.getParameter("id"), request.getParameter("gender"),
				request.getParameter("province"), request.getParameter("city"), request.getParameter("area"),
				request.getParameter("tradePwd"), request.getParameter("phonePwd"), request.getParameter("phone"),
				request.getParameter("fax"), "", request.getParameter("mail"), request.getParameter("address"), "", "",
				request.getParameter("idType"), request.getParameter("bankno"), request.getParameter("bank") };
		// 指定openAndCheck方法返回值的数据类型的Class对象
		Class[] classes = new Class[] { String.class };
		// 指定要调用的openAndCheck方法及WSDL文件的命名空间
		QName opAddEntry = new QName("http://impl.service.ta.ctis.com", "openAndCheck");
		// 调用getMobileCodeInfo方法并输出该方法的返回值
		Object[] str = null;
		try {
			str = client.invokeBlocking(opAddEntry, entrysArgs, classes);
		} catch (AxisFault e) {
			e.printStackTrace();
		}
		System.out.println(str[0]+"=="+str.length);
		System.out.println(ConfigFactory.getString(0, String.valueOf(str[0])));
		return "index/step5";
	}

	@RequestMapping("/step6.htm")
	public String step6(String v) {
		if ("".equals(v) || v == null || "".equals(v)) {
			return "redirect:/reservation.htm";
		}
		return "index/step6";
	}
}
